// Script para verificar se o problema dos KPIs foi resolvido
// Usando fetch nativo do Node.js 18+

const BASE_URL = 'http://localhost:8889/.netlify/functions/api';

async function verificarSolucao() {
  console.log('üîç Verificando se o problema dos KPIs foi resolvido\n');

  try {
    // 1. Verificar se a API est√° respondendo corretamente
    console.log('1. ‚úÖ Testando conectividade da API...');
    const healthResponse = await fetch(`${BASE_URL}/health`);
    if (healthResponse.status === 200) {
      console.log('   ‚úÖ API est√° respondendo corretamente');
    } else {
      console.log('   ‚ùå API n√£o est√° respondendo');
      return;
    }

    // 2. Verificar se os KPIs est√£o sendo retornados
    console.log('\n2. ‚úÖ Testando retorno de KPIs...');
    const kpisResponse = await fetch(`${BASE_URL}/kpis`);
    const kpisData = await kpisResponse.json();
    console.log(`   ‚úÖ Total de KPIs retornados: ${kpisData.length}`);
    console.log(`   ‚úÖ KPIs: ${kpisData.join(', ')}`);

    // 3. Verificar se as fun√ß√µes est√£o sendo retornadas
    console.log('\n3. ‚úÖ Testando retorno de fun√ß√µes...');
    const functionsResponse = await fetch(`${BASE_URL}/functions`);
    const functionsData = await functionsResponse.json();
    console.log(`   ‚úÖ Fun√ß√µes dispon√≠veis: ${functionsData.join(', ')}`);

    // 4. Verificar KPIs espec√≠ficos por fun√ß√£o e turno
    console.log('\n4. ‚úÖ Testando KPIs espec√≠ficos por fun√ß√£o e turno...');
    
    const testCases = [
      { funcao: 'Operador de Empilhadeira', turno: 'Manh√£', esperado: ['TMA', 'Ressuprimento'] },
      { funcao: 'Operador de Empilhadeira', turno: 'Tarde', esperado: ['TMA', 'EFD'] },
      { funcao: 'Operador de Empilhadeira', turno: 'Noite', esperado: ['TMA', 'EFC'] },
      { funcao: 'Ajudante de Armaz√©m', turno: 'Manh√£', esperado: ['Ressuprimento', 'EFC'] },
      { funcao: 'Ajudante de Armaz√©m', turno: 'Tarde', esperado: ['EFC', 'Maria Mole'] }
    ];

    let todosOsTestesPassaram = true;

    for (const testCase of testCases) {
      const url = `${BASE_URL}/kpis/available?funcao=${encodeURIComponent(testCase.funcao)}&turno=${encodeURIComponent(testCase.turno)}`;
      const response = await fetch(url);
      const data = await response.json();
      
      const kpisRetornados = data.kpisAtingidos || [];
      const kpisEsperados = testCase.esperado;
      
      const todosKpisPresentes = kpisEsperados.every(kpi => kpisRetornados.includes(kpi));
      
      if (todosKpisPresentes && kpisRetornados.length === kpisEsperados.length) {
        console.log(`   ‚úÖ ${testCase.funcao} - ${testCase.turno}: ${kpisRetornados.join(', ')}`);
      } else {
        console.log(`   ‚ùå ${testCase.funcao} - ${testCase.turno}: Esperado [${kpisEsperados.join(', ')}], Recebido [${kpisRetornados.join(', ')}]`);
        todosOsTestesPassaram = false;
      }
    }

    // 5. Verificar valida√ß√£o de par√¢metros
    console.log('\n5. ‚úÖ Testando valida√ß√£o de par√¢metros...');
    const noParamsResponse = await fetch(`${BASE_URL}/kpis/available`);
    if (noParamsResponse.status === 400) {
      console.log('   ‚úÖ Valida√ß√£o de par√¢metros funcionando corretamente');
    } else {
      console.log('   ‚ùå Valida√ß√£o de par√¢metros n√£o est√° funcionando');
      todosOsTestesPassaram = false;
    }

    // Resultado final
    console.log('\n' + '='.repeat(60));
    if (todosOsTestesPassaram) {
      console.log('üéâ PROBLEMA RESOLVIDO! Todos os testes passaram.');
      console.log('\nüìã Resumo da solu√ß√£o:');
      console.log('   ‚Ä¢ O problema era que o servidor estava rodando na porta 5173 (Vite)');
      console.log('   ‚Ä¢ As fun√ß√µes Netlify precisavam rodar na porta 8889 (Netlify Dev)');
      console.log('   ‚Ä¢ A pasta functions-build j√° existia com as fun√ß√µes compiladas');
      console.log('   ‚Ä¢ Agora a API est√° respondendo corretamente em http://localhost:8889/.netlify/functions/api');
      console.log('\nüîß Comandos para reproduzir a solu√ß√£o:');
      console.log('   1. npm run build:functions  # Compilar as fun√ß√µes');
      console.log('   2. netlify dev --port 8889   # Rodar o servidor Netlify');
      console.log('   3. Usar http://localhost:8889/.netlify/functions/api como base URL');
    } else {
      console.log('‚ùå AINDA H√Å PROBLEMAS. Alguns testes falharam.');
    }
    console.log('='.repeat(60));

  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error.message);
  }
}

verificarSolucao();