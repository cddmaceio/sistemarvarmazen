// Using native fetch (Node.js 18+)

// Test data for multiple activities
const testData = {
  funcao: 'Ajudante de Armaz√©m',
  turno: 'Manh√£',
  multiple_activities: [
    {
      nome_atividade: 'Prod Repack',
      quantidade_produzida: 150,
      tempo_horas: 6
    },
    {
      nome_atividade: 'Prod Devolu√ß√£o',
      quantidade_produzida: 800,
      tempo_horas: 3
    }
  ],
  kpis_atingidos: ['EFC', 'Ressuprimento'],
  input_adicional: 0
};

async function testMultipleActivitiesAPI() {
  try {
    console.log('üß™ Testando API com m√∫ltiplas atividades...');
    console.log('üìä Dados de teste:', JSON.stringify(testData, null, 2));
    
    const response = await fetch('http://localhost:5173/api/calculate', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData)
    });
    
    const result = await response.json();
    
    console.log('\nüìã Resultado da API:');
    console.log(JSON.stringify(result, null, 2));
    
    if (result.data) {
      const { data } = result;
      
      console.log('\n‚úÖ Verifica√ß√µes:');
      console.log(`- Subtotal Atividades: R$ ${data.subtotalAtividades?.toFixed(2) || '0.00'}`);
      console.log(`- Valor Bruto Atividades: R$ ${data.valorBrutoAtividades?.toFixed(2) || 'N√ÉO ENCONTRADO'}`);
      console.log(`- Bonus KPIs: R$ ${data.bonusKpis?.toFixed(2) || '0.00'}`);
      console.log(`- Remunera√ß√£o Total: R$ ${data.remuneracaoTotal?.toFixed(2) || '0.00'}`);
      
      if (data.atividadesDetalhes) {
        console.log('\nüìù Detalhes das Atividades:');
        data.atividadesDetalhes.forEach((detalhe, index) => {
          console.log(`  ${index + 1}. ${detalhe}`);
        });
      }
      
      // Verificar se valor_bruto_atividades est√° presente
      if (data.valorBrutoAtividades) {
        console.log('\n‚úÖ SUCESSO: valor_bruto_atividades est√° sendo retornado!');
        
        // Verificar se a regra de 50% est√° sendo aplicada
        const expectedSubtotal = data.valorBrutoAtividades / 2;
        const actualSubtotal = data.subtotalAtividades - (data.bonusKpis || 0);
        
        if (Math.abs(expectedSubtotal - actualSubtotal) < 0.01) {
          console.log('‚úÖ SUCESSO: Regra de 50% aplicada corretamente!');
        } else {
          console.log('‚ùå ERRO: Regra de 50% n√£o est√° sendo aplicada corretamente');
          console.log(`  Esperado: ${expectedSubtotal.toFixed(2)}`);
          console.log(`  Atual: ${actualSubtotal.toFixed(2)}`);
        }
      } else {
        console.log('‚ùå ERRO: valor_bruto_atividades n√£o est√° sendo retornado!');
      }
    } else {
      console.log('‚ùå ERRO na API:', result.error);
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao testar API:', error.message);
  }
}

// Execute the test
testMultipleActivitiesAPI();